// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlingshotApplication.Context;

namespace SlingshotApplication.Migrations
{
    [DbContext(typeof(SlingshotContext))]
    partial class SlingshotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SlingshotApplication.Models.Edge", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("SourceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TargetId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("Edges");
                });

            modelBuilder.Entity("SlingshotApplication.Models.Node", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("NearestToStartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NearestToStartId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("SlingshotApplication.Models.Edge", b =>
                {
                    b.HasOne("SlingshotApplication.Models.Node", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("SlingshotApplication.Models.Node", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId");
                });

            modelBuilder.Entity("SlingshotApplication.Models.Node", b =>
                {
                    b.HasOne("SlingshotApplication.Models.Node", "NearestToStart")
                        .WithMany()
                        .HasForeignKey("NearestToStartId");
                });
#pragma warning restore 612, 618
        }
    }
}
